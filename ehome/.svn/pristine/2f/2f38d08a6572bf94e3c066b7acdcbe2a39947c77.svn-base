//package com.ehome.core.util;
//
//import java.text.DateFormat;
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
//import java.util.Calendar;
//import java.util.Date;
//
//import org.apache.commons.lang3.StringUtils;
//
//public class DateUtil {
//	private final static SimpleDateFormat sdfYear = new SimpleDateFormat("yyyy");
//	private final static SimpleDateFormat sdfDay = new SimpleDateFormat(
//			"yyyy-MM-dd");
//	private final static SimpleDateFormat sdfDays = new SimpleDateFormat(
//			"yyyyMMdd");
//	private final static SimpleDateFormat sdfTime = new SimpleDateFormat(
//			"yyyy-MM-dd HH:mm:ss");
//	private final static SimpleDateFormat sdfHHmm = new SimpleDateFormat(
//			"HH:mm");
//	private final static SimpleDateFormat sdfAllTime = new SimpleDateFormat(
//			"yyyyMMddHHmmssSSS");
//
//	/**
//	 * 获取YYYY格式
//	 * 
//	 * @return
//	 */
//	public static String getYear() {
//		return sdfYear.format(new Date());
//	}
//
//	/**
//	 * 获取YYYY-MM-DD格式
//	 * 
//	 * @return
//	 */
//	public static String getDay() {
//		return sdfDay.format(new Date());
//	}
//
//	/**
//	 * 获取YYYY-MM-DD格式
//	 * 
//	 * @return
//	 */
//	public static String getDay(Date date) {
//		return sdfDay.format(date);
//	}
//
//	/**
//	 * 获取YYYYMMDD格式
//	 * 
//	 * @return
//	 */
//	public static String getDays() {
//		return sdfDays.format(new Date());
//	}
//
//	/**
//	 * 获取HHmm格式
//	 * 
//	 * @return
//	 */
//	public static String getHHmm() {
//		return sdfHHmm.format(new Date());
//	}
//
//	/**
//	 * 获取HHmm格式
//	 * 
//	 * @return
//	 */
//	public static String getHHmm(Date date) {
//		return sdfHHmm.format(date);
//	}
//
//	/**
//	 * 获取YYYYMMDDHHMMSSSSS格式
//	 * 
//	 * @return
//	 */
//	public static String getDayTime() {
//		return sdfAllTime.format(new Date());
//	}
//
//	/**
//	 * 获取YYYY-MM-DD HH:mm:ss格式
//	 * 
//	 * @return
//	 */
//	public static String getTime() {
//		return sdfTime.format(new Date());
//	}
//
//	/**
//	 * 获取YYYY-MM-DD HH:mm:ss格式
//	 * 
//	 * @return
//	 */
//	public static String getTime(Date date) {
//		return sdfTime.format(date);
//	}
//
//	/**
//	 * @Title: compareDate
//	 * @Description: TODO(日期比较，如果s>=e 返回true 否则返回false)
//	 * @param s
//	 * @param e
//	 * @return boolean
//	 * @throws
//	 * @author luguosui
//	 */
//	public static boolean compareDate(String s, String e) {
//		if (fomatDate2(s) == null || fomatDate2(e) == null) {
//			return false;
//		}
//		return fomatDate2(s).getTime() >= fomatDate2(e).getTime();
//	}
//
//	/**
//	 * 格式化日期 yyyy-MM-dd
//	 * 
//	 * @return
//	 */
//	public static Date fomatDate(String date) {
//		DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
//		try {
//			return fmt.parse(date);
//		} catch (ParseException e) {
//			e.printStackTrace();
//			return null;
//		}
//	}
//
//	/**
//	 * 格式化日期 yyyy-MM-dd HH:mm:ss
//	 * 
//	 * @return
//	 */
//	public static Date fomatDate2(String date) {
//		DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//		try {
//			return fmt.parse(date);
//		} catch (ParseException e) {
//			e.printStackTrace();
//			return null;
//		}
//	}
//
//	/**
//	 * 格式化日期 yyyy-MM-dd HH:mm
//	 * 
//	 * @return
//	 */
//	public static Date fomatDate3(String date) {
//		DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm");
//		try {
//			return fmt.parse(date);
//		} catch (ParseException e) {
//			e.printStackTrace();
//			return null;
//		}
//	}
//
//	/**
//	 * 校验日期是否合法
//	 * 
//	 * @return
//	 */
//	public static boolean isValidDate(String s) {
//		DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
//		try {
//			fmt.parse(s);
//			return true;
//		} catch (Exception e) {
//			// 如果throw java.text.ParseException或者NullPointerException，就说明格式不对
//			return false;
//		}
//	}
//
//	public static int getDiffYear(String startTime, String endTime) {
//		DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
//		try {
//			int years = (int) (((fmt.parse(endTime).getTime() - fmt.parse(
//					startTime).getTime()) / (1000 * 60 * 60 * 24)) / 365);
//			return years;
//		} catch (Exception e) {
//			// 如果throw java.text.ParseException或者NullPointerException，就说明格式不对
//			return 0;
//		}
//	}
//
//	/**
//	 * <li>功能描述：时间相减得到天数
//	 * 
//	 * @param beginDateStr
//	 * @param endDateStr
//	 * @return long
//	 * @author Administrator
//	 */
//	public static long getDaySub(String beginDateStr, String endDateStr) {
//		long day = 0;
//		java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(
//				"yyyy-MM-dd");
//		java.util.Date beginDate = null;
//		java.util.Date endDate = null;
//		try {
//			beginDate = format.parse(beginDateStr);
//			endDate = format.parse(endDateStr);
//		} catch (ParseException e) {
//			e.printStackTrace();
//		}
//		day = (endDate.getTime() - beginDate.getTime()) / (24 * 60 * 60 * 1000);
//		// System.out.println("相隔的天数="+day);
//		return day;
//	}
//
//	/**
//	 * 得到n天之后的日期
//	 * 
//	 * @param days
//	 * @return
//	 */
//	public static String getAfterDayDate(String days) {
//		int daysInt = Integer.parseInt(days);
//		Calendar canlendar = Calendar.getInstance(); // java.util包
//		canlendar.add(Calendar.DATE, daysInt); // 日期减 如果不够减会将月变动
//		Date date = canlendar.getTime();
//		SimpleDateFormat sdfd = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//		String dateStr = sdfd.format(date);
//		return dateStr;
//	}
//
//	/**
//	 * 得到n天之后是周几
//	 * 
//	 * @param days
//	 * @return
//	 */
//	public static String getAfterDayWeek(String days) {
//		int daysInt = Integer.parseInt(days);
//		Calendar canlendar = Calendar.getInstance(); // java.util包
//		canlendar.add(Calendar.DATE, daysInt); // 日期减 如果不够减会将月变动
//		Date date = canlendar.getTime();
//		SimpleDateFormat sdf = new SimpleDateFormat("E");
//		String dateStr = sdf.format(date);
//		return dateStr;
//	}
//
//	/**
//	 * 
//	 * @param smdate
//	 * @param bdate
//	 * @return
//	 * @throws 计算两个时间
//	 */
//	public static int daysBetween2(String smdate, String bdate) {
//		if (smdate == null || smdate.equals("") || bdate == null
//				|| bdate.equals("")) {
//			return -1;
//		}
//		java.util.Date nowdate1 = null;
//		java.util.Date nowdate2 = null;
//		long between_days = 0l;
//		try {
//			nowdate1 = new SimpleDateFormat("yyyy-MM-dd").parse(smdate);
//			nowdate2 = new SimpleDateFormat("yyyy-MM-dd").parse(bdate);
//			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//			nowdate1 = sdf.parse(sdf.format(nowdate1));
//			nowdate2 = sdf.parse(sdf.format(nowdate2));
//			Calendar cal = Calendar.getInstance();
//			cal.setTime(nowdate1);
//			long time1 = cal.getTimeInMillis();
//			cal.setTime(nowdate2);
//			long time2 = cal.getTimeInMillis();
//			between_days = (time2 - time1) / (1000 * 3600 * 24);
//		} catch (ParseException e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
//		return java.lang.Math
//				.abs(Integer.parseInt(String.valueOf(between_days)));
//	}
//
//	public static int daysBetween(String smdate, String bdate) {
//		if (smdate == null || smdate.equals("") || bdate == null
//				|| bdate.equals("")) {
//			return -1;
//		}
//		java.util.Date nowdate1 = null;
//		java.util.Date nowdate2 = null;
//		long between_days = 0l;
//		try {
//			nowdate1 = new SimpleDateFormat("yyyyMMdd").parse(smdate);
//			nowdate2 = new SimpleDateFormat("yyyyMMdd").parse(bdate);
//			SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
//			nowdate1 = sdf.parse(sdf.format(nowdate1));
//			nowdate2 = sdf.parse(sdf.format(nowdate2));
//			Calendar cal = Calendar.getInstance();
//			cal.setTime(nowdate1);
//			long time1 = cal.getTimeInMillis();
//			cal.setTime(nowdate2);
//			long time2 = cal.getTimeInMillis();
//			between_days = (time2 - time1) / (1000 * 3600 * 24);
//		} catch (ParseException e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
//		return java.lang.Math
//				.abs(Integer.parseInt(String.valueOf(between_days)));
//	}
//
//	/**
//	 * Date或者String转化为时间戳
//	 * 
//	 * @param time
//	 * @return 秒数
//	 */
//	public static long date2second(String time) {
//		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//		Date date = null;
//		try {
//			date = format.parse(time);
//		} catch (ParseException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		return date.getTime() / 1000;
//	}
//
//	/**
//	 * Date或者String转化为时间戳
//	 * 
//	 * @param time
//	 *            毫秒数/秒数
//	 * @return
//	 */
//	public static String second2date(long time) {
//		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//		String d = null;
//		if (time / 1000 > 1000000000) { // 毫秒数
//			d = format.format(time);
//		} else { // 秒数
//			d = format.format(Long.valueOf(time * 1000));
//		}
//		return d;
//	}
//
//	/**
//	 * Date或者String转化为时间戳
//	 * 
//	 * @param time
//	 *            毫秒数/秒数
//	 * @return
//	 */
//	public static String second2dayDate(long time) {
//		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//		String d = null;
//		if (time / 1000 > 1000000000) { // 毫秒数
//			d = format.format(time);
//		} else { // 秒数
//			d = format.format(Long.valueOf(time * 1000));
//		}
//		return d;
//	}
//
//	/**
//	 * 根据出生日期获取人的年龄
//	 * 
//	 * @param strBirthDate
//	 *            (yyyy-mm-dd or yyyy/mm/dd)
//	 * @return
//	 */
//	public static String getPersonAgeByBirthDate(Date dateBirthDate) {
//		if (dateBirthDate == null) {
//			return "";
//		}
//		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//		String strBirthDate = dateFormat.format(dateBirthDate);
//		// 读取当前日期
//		Calendar c = Calendar.getInstance();
//		int year = c.get(Calendar.YEAR);
//		int month = c.get(Calendar.MONTH) + 1;
//		int day = c.get(Calendar.DATE);
//		// 计算年龄
//		int age = year - Integer.parseInt(strBirthDate.substring(0, 4)) - 1;
//		if (Integer.parseInt(strBirthDate.substring(5, 7)) < month) {
//			age++;
//		} else if (Integer.parseInt(strBirthDate.substring(5, 7)) == month
//				&& Integer.parseInt(strBirthDate.substring(8, 10)) <= day) {
//			age++;
//		}
//		return String.valueOf(age);
//	}
//
//	/**
//	 * 根据出生日期获取人的年龄
//	 * 
//	 * @param strBirthDate
//	 *            (yyyy-mm-dd or yyyy/mm/dd)
//	 * @return
//	 * @throws ParseException
//	 */
//	public static String getPersonAgeByBirthDate(String strBirthDate)
//			throws ParseException {
//		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//		if (StringUtils.isBlank(strBirthDate))
//			return "";
//		try {
//			strBirthDate = sdf.format(sdf.parse(strBirthDate));
//		} catch (ParseException e) {
//			// TODO Auto-generated catch block
//			sdf = new SimpleDateFormat("yyyy年MM月");
//			strBirthDate = sdf.format(sdf.parse(strBirthDate)) + "01日";
//		}
//		// 读取当前日期
//		Calendar c = Calendar.getInstance();
//		int year = c.get(Calendar.YEAR);
//		int month = c.get(Calendar.MONTH) + 1;
//		int day = c.get(Calendar.DATE);
//		// 计算年龄
//		int age = year - Integer.parseInt(strBirthDate.substring(0, 4)) - 1;
//		if (Integer.parseInt(strBirthDate.substring(5, 7)) < month) {
//			age++;
//		} else if (Integer.parseInt(strBirthDate.substring(5, 7)) == month
//				&& Integer.parseInt(strBirthDate.substring(8, 10)) <= day) {
//			age++;
//		}
//		if (age == 0)
//			age++;
//		return String.valueOf(age);
//	}
//
//	public static void main(String[] args) throws ParseException {
//		// System.out.println(getDays());
//		// System.out.println(getAfterDayWeek("3"));
//		// System.out.println(daysBetween("2015-06-30 12:30:40","2015-06-29 12:30:40"));
//		String time = "2016-01-06 11:45:55";
//		long lt = Long.valueOf("1452051955000");
//		System.out.println(date2second(time));
//		System.out.println(second2date(1452051955));
//		System.out.println(second2date(lt));
//		String age = getPersonAgeByBirthDate("1980年6月");
//		// System.out.print("Format To times:"+date.getTime()); 1452051955
//	}
//
//}
