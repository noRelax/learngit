package com.ehome.cloud.sys.controller;

import java.io.PrintWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.ehome.cloud.sys.model.MenuModel;
import com.ehome.cloud.sys.service.IMenuService;
import com.ehome.core.frame.BaseController;
import com.ehome.core.util.PageData;

/**
 * 
 * @Title:MenuController
 * @Description:菜单管理
 * @author:zsh
 * @date:2017年2月13日
 * @version 1.0,2017年2月13日
 * @{tags}
 */
@Controller
@RequestMapping(value = "/menu")
public class MenuController extends BaseController{
	private final static Logger logger = LoggerFactory
			.getLogger(MenuController.class);
	
	@Resource
	private IMenuService menuService;
	
	/***
	 * 菜单管理主页
	  * 
	  * @param menuModel
	  * @param request
	  * @param response
	  * @return
	 */
	@RequestMapping(value= "list")
	public ModelAndView getList(MenuModel menuModel,HttpServletRequest request,
			HttpServletResponse response){
		response.setContentType("text/html;charset=utf-8");
		response.setCharacterEncoding("utf-8");
		ModelAndView result = null;
		HashMap<String, Object> map = new HashMap<String,Object>();
		try {
	        result = new ModelAndView("/system"+request.getServletPath()+".html");
        
	        List<Map<String, Object>> varList = menuService.queryTreelist(map);
			System.out.println(varList);
//			System.out.println("resultStr"+JSON.toJSONString(varList));
			result.addObject("resultStr",JSON.toJSONString(varList));
			System.out.println(JSON.toJSONString(varList));
//			System.out.println("resultStr"+JSON.toJSONString(varList).replaceAll("false", "0").replaceAll("true", "1"));
//			result.addObject("resultStr",JSON.toJSONString(varList).replaceAll("false", "0").replaceAll("true", "1"));
		} catch (Exception e) {
			e.printStackTrace();
		}
        return result;
	}
	
	/**
	 * 获取子节点
	  * 
	  * @param request
	  * @param response
	  * @throws Exception
	 */
	
	@RequestMapping(value = "/getChilds")
	public void getChilds(HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		response.setContentType("text/html; charset=utf-8");
		request.setCharacterEncoding("utf-8");

		try {

			String pid = request.getParameter("nodeId");// 当前节点ID
			List<Map<String, Object>> varList = menuService.getChilds(pid);// 查找该节点下的所有数据
			
//			Integer menuId = 1;
//			List<Map<String, Object>> users =  menuService.queryUsersByMenuId(menuId);

			String resultStr = "";
			if (varList == null || varList.size() == 0) {
				resultStr = "{}";
				response.getWriter().print(resultStr);
				return;
			}

			resultStr = JSON.toJSONString(varList);
			System.out.println("buff--->>" + resultStr);

			response.getWriter().print(resultStr);

		} catch (Exception e) {
			logger.error(e.toString(), e);
			// response.getWriter().print("{\"data\":\"\"}");
		}
	}
	
	/**
	 * 进入节点新增或编辑页面
	 * 
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/add")
	public ModelAndView goAddNode(HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		response.setContentType("text/html;charset=utf-8");
		response.setCharacterEncoding("utf-8");
//		response.setHeader("Cache-Control", "no-cache");
//		response.getWriter().print(resultStr);
		
		ModelAndView result = null;
		Map<String, Object> obj = new HashMap<>();
		try {
			result = new ModelAndView("/system"+request.getServletPath()+".html");
			
			String id = request.getParameter("id");
			obj.put("parent_id", request.getParameter("parent_id"));
			// XXX  节点类型 获取父节点的类型
//			obj.put("type", request.getParameter("type"));
			
			if(id!=null && !"".equals(id)){
		        obj = menuService.queryByIdReturnMap(Integer.parseInt(id));
			}
			// FIXME 查询出menu_type=true
			
//			for(Iterator it=obj.keySet().iterator();it.hasNext();)
//	    	{
//	    		String key=(String)it.next();
//	    		if(obj.get(key)!=null){
//	    			if("false".equals(obj.get(key))){
//	    				obj.put(key, 0);
//	    			}else if("true".equals(obj.get(key))){
//	    				obj.put(key, 1);
//	    			}
//	    		}
//	    	}
			
	        result.addObject("obj",obj);
	        
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	
	/**
	 * 增加节点
	  * 
	  * @param request
	  * @param response
	  * @throws Exception
	 */
	@RequestMapping(value = "/addNode")
	public ModelAndView addNode(HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		response.setContentType("text/html; charset=utf-8");
		request.setCharacterEncoding("utf-8");
		Map<String, Object> map  = new HashMap<>();
	    map =  this.getPageData();
		try {
			if(map.get("id")==null || "".equals(map.get("id"))){
				menuService.insertMenuByMap(map);
			}else{
				// XXX 状态暂时设置默认值
				map.put("status", 0);
				menuService.updateMenuByMap(map);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
        return  new ModelAndView("redirect:/menu/list");
	}
	
	/**
	 * 删除节点
	  * 
	  * @param out
	  * @param request
	 */
	@RequestMapping(value = "/deleteNode")
	public void deleteNode(PrintWriter out, HttpServletRequest request)
	{
		PageData pd = new PageData();
		int flag = 0;
		try
		{
			pd = this.getPageData();
			if (pd.get("id") != null && !"".equals(pd.get("id")))
			{
				flag = menuService.deleteMenuById(pd.getInteger("id", -1));
			}
		} catch (Exception e)
		{
			logger.error(e.toString(), e);

		}
		out.println(flag);
	}

	
}
