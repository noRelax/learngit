<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ehome.cloud.sys.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.ehome.cloud.sys.model.UserModel">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="user_account" property="userAccount" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_email" property="userEmail" jdbcType="INTEGER" />
		<result column="user_tel" property="userTel" jdbcType="VARCHAR" />
		<result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
		<result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" />
		<result column="activeFlag" property="activeFlag" />
		<result column="orgainId" property="orgainId" />
		<result column="userType" property="userType" />
		<result column="sex" property="sex" />
		<result column="province" property="province" />
		<result column="city" property="city" />
		<result column="county" property="county" />
		<result column="address" property="address" />
		<result column="street" property="street" />
		<result column="salt" property="salt" />
		<result column="app_user_id" property="appUserId" />
		<result column="create_user" property="createUser"/>
		<result column="dept_id" property="deptId"/>
		<result column="base_union_id" property="baseUnionId"/>
		<result column="orgainName" property="orgainName"/>
		<result column="deptName" property="deptName"/>
		<result column="baseUnionName" property="baseUnionName"/>
		<result column="roleName" property="roleName"/>
	</resultMap>
	
	
	<sql id="commonSQL">
         SELECT u.id,u.user_account,u.user_password,u.user_name,u.user_email,u.user_tel,u.user_mobile,
         u.user_desc,u.status,u.active_flag,u.orgain_id,u.user_type,u.sex,u.province,u.city,u.county,
         u.address,u.street,u.salt,u.create_time,u.app_user_id,u.create_user,u.dept_id,u.base_union_id
	</sql>
	
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
	   	INSERT INTO t_user (
			user_account,
			user_password,
			user_name,
			user_email,
			user_tel,
			user_mobile,
			user_desc,
			status,
			active_flag,
			orgain_id,
			user_type,
			sex,
			province,
			city,
			county,
			address,
			street,
			salt,
			create_time,
			app_user_id,
			create_user,
			dept_id,
			base_union_id
		) VALUES (
			#{userAccount},
			#{userPassword},
			#{userName},
			#{userEmail},
			#{userTel},
			#{userMobile},
			#{userDesc},
			#{status},
			#{activeFlag},
			#{orgainId},
			#{userType},
			#{sex},
			#{province},
			#{city},
			#{county},
			#{address},
			#{street},
			#{salt},
			now(),
			#{appUserId},
			#{createUser},
			#{deptId},
			#{baseUnionId}
		)
	</insert>
	
	<update id="updateUser">
		UPDATE t_user SET
			user_account = #{userAccount},
			user_name = #{userName},
			user_email = #{userEmail},
			user_tel = #{userTel},
			user_mobile = #{userMobile},
			user_desc = #{userDesc},
			status = #{status},
			active_flag = #{activeFlag},
			orgain_id = #{orgainId},
			user_type = #{userType},
			sex = #{sex},
			province = #{province},
			city = #{city},
			county = #{county},
			address = #{address},
			street = #{street},
			salt = #{salt},
			dept_id = #{deptId},
			base_union_id = #{baseUnionId}
		WHERE 
			id = #{id}
	</update>
	
	<delete id="deleteUserById" parameterType="java.lang.Integer">
	    DELETE FROM t_user WHERE id = #{id}
	</delete>
	
	<select id="queryById" resultType="com.ehome.cloud.sys.model.UserModel">
		<include refid="commonSQL"></include>
	    FROM t_user u 
	    <where>
	         u.id = #{id}
	    </where>
	</select>
	
	<select id="queryForList" resultMap="BaseResultMap">
	     <include refid="commonSQL"></include>,
	     o.orgain_name orgainName, d.orgain_name deptName,
	     b.roleName
	     FROM t_user u 
	     LEFT JOIN t_orgain o ON u.orgain_id = o.id
	     LEFT JOIN t_orgain d ON u.dept_id = d.id
	     LEFT JOIN (
	        SELECT t.user_id,GROUP_CONCAT(r.role_name) roleName 
	        FROM t_role_user t JOIN t_user u1 on t.user_id = u1.id
            JOIN t_role r ON t.role_id = r.id GROUP BY t.user_id
	     ) b ON u.id = b.user_id
	     
	     <where>
	         <if test="userName!=null and userName!=''">
	             AND (u.user_name LIKE CONCAT(#{userName},'%')
	             OR u.user_account LIKE CONCAT(#{userName},'%'))
	         </if>
	         <if test="roleName!=null and roleName!=''">
	             AND roleName LIKE CONCAT('%', #{roleName},'%')
	         </if> 
	         <if test="orgName!=null and orgName!=''">
	             AND u.user_name != #{userName}
	         </if>
	         <if test="deptId!=null and deptId!=''">
	             AND u.user_name != #{userName}
	         </if>
	         <if test="userId!=null and userId!=0">
	             AND u.create_user = #{userId}
	         </if>
	     </where>
	     ORDER BY u.create_time DESC
	</select>
	
	<select id="queryByLoginName" resultType="com.ehome.cloud.sys.model.UserModel">
	    <include refid="commonSQL"></include>
	    FROM t_user u 
	    <where>
	         u.user_account = #{loginName}
	         LIMIT 1
	    </where>
	</select>
	
	<select id="checkUserAndPassWord" resultType="com.ehome.cloud.sys.model.UserModel">
	    <include refid="commonSQL"></include>
	    FROM t_user u 
	    <where>
	         u.user_account = #{loginName}
	         AND
	         u.user_password = #{password}
	         LIMIT 1
	    </where>
	</select>
	
	<update id="updateStatus">
	    UPDATE t_user SET status = #{status} 
	    WHERE id = #{id}
	</update>
	
	<update id="updatePassword">
		UPDATE t_user SET user_password = #{userPassword},
		salt = #{salt}
	    WHERE id = #{id}
	</update>
	
	<insert id="insertMember">
		INSERT INTO t_user_group (user_id,group_id) VALUES
		<foreach collection="List" item="item" index="index" separator=",">
			(#{item},#{groupId})
		</foreach>
	</insert>
	
	<insert id="insertMembers">
		INSERT INTO t_user_group (user_id,group_id) VALUES
		<foreach collection="USER_IDS" item="item" index="index" separator=",">
			(#{item},#{groupId})
		</foreach>
	</insert>
	
	<select id="queryMemberList" resultMap="BaseResultMap">
	    SELECT u.id,u.user_account,u.user_password,u.user_name,u.user_email,u.user_tel,u.user_mobile,
         u.user_desc,u.status,u.active_flag,u.orgain_id,u.user_type,u.sex,u.province,u.city,u.county,
         u.address,u.street,u.salt,u.create_time,u.app_user_id,u.create_user 
         FROM t_user u LEFT JOIN t_user_group g ON u.id = g.user_id 
         where g.group_id=#{groupId} and u.id in 
         <if test="userIdList != null and userIdList.size() != 0">
           <foreach collection="userIdList" item="item" index="index" open="("
	         separator="," close=")">
	         #{item}
           </foreach>
         </if>
	</select>
	
	<insert id="insertAppMember">
		INSERT INTO t_app_user_group (app_user_id,group_id) VALUES
		<foreach collection="List" item="item" index="index" separator=",">
			(#{item},#{groupId})
		</foreach>
	</insert>
	
	<select id="queryAppMemberList" resultMap="BaseResultMap">
	    SELECT u.id,u.user_account,u.user_password,u.user_name,u.user_email,u.user_tel,u.user_mobile,
         u.user_desc,u.status,u.active_flag,u.orgain_id,u.user_type,u.sex,u.province,u.city,u.county,
         u.address,u.street,u.salt,u.create_time,u.app_user_id,u.create_user 
         FROM t_user u LEFT JOIN t_app_user_group g ON u.id = g.app_user_id 
         where g.group_id=#{groupId} and u.id in 
         <if test="userIdList != null and userIdList.size() != 0">
           <foreach collection="userIdList" item="item" index="index" open="("
	         separator="," close=")">
	         #{item}
           </foreach>
         </if>
	</select>
	
		<insert id="insertAppMembers">
		INSERT INTO t_app_user_group (app_user_id,group_id) VALUES
		<foreach collection="USER_IDS" item="item" index="index" separator=",">
			(#{item},#{groupId})
		</foreach>
	</insert>
	
	<select id="queryForUserGroupList" resultMap="BaseResultMap">
	     SELECT u.id,u.user_account as userAccount,u.user_name as userName,u.create_time as createTime,
	     o.orgain_name orgainName, d.orgain_name deptName,b.roleName, u.user_desc as userDesc
	     FROM t_user u 
	     LEFT JOIN t_orgain o ON u.orgain_id = o.id
	     LEFT JOIN t_orgain d ON u.dept_id = d.id
	     LEFT JOIN (
	        SELECT t.user_id,GROUP_CONCAT(r.role_name) roleName 
	        FROM t_role_user t JOIN t_user u1 on t.user_id = u1.id
            JOIN t_role r ON t.role_id = r.id GROUP BY t.user_id
	     ) b ON u.id = b.user_id
	     
	     <where>
	         <if test="userName!=null and userName!=''">
	             AND u.user_name LIKE CONCAT('%',#{userName},'%')
	         </if>
	     </where>
	     ORDER BY u.create_time DESC
	</select>
	     
	<select id="queryHTMemberList" resultMap="BaseResultMap">
	    SELECT u.id,u.user_account as userAccount,u.user_name as userName,u.create_time as createTime,
	     o.orgain_name orgainName, d.orgain_name deptName,b.roleName, u.user_desc as userDesc
	     FROM t_user u 
	     LEFT JOIN t_orgain o ON u.orgain_id = o.id
	     LEFT JOIN t_orgain d ON u.dept_id = d.id
         LEFT JOIN t_user_group g ON u.id = g.user_id 
	     LEFT JOIN (
	        SELECT t.user_id,GROUP_CONCAT(r.role_name) roleName 
	        FROM t_role_user t JOIN t_user u1 on t.user_id = u1.id
            JOIN t_role r ON t.role_id = r.id GROUP BY t.user_id
	     ) b ON u.id = b.user_id WHERE g.group_id=#{groupId} 
	     
	     <if test="userIdList != null and userIdList.size() != 0">
	       AND u.id in
           <foreach collection="userIdList" item="item" index="index" open="("
	         separator="," close=")">
	         #{item}
           </foreach>
         </if>
         <if test="userName !=null and userName !=''">
             AND u.user_name LIKE CONCAT('%',#{userName},'%')
         </if>
         ORDER BY u.create_time DESC
	</select>
	
	<select id="queryQTMemberList" resultMap="BaseResultMap">
	    SELECT u.id,u.user_account as userAccount,u.user_name as userName,u.create_time as createTime,
	     o.orgain_name orgainName, d.orgain_name deptName,b.roleName, u.user_desc as userDesc
	     FROM t_user u 
	     LEFT JOIN t_orgain o ON u.orgain_id = o.id
	     LEFT JOIN t_orgain d ON u.dept_id = d.id
         LEFT JOIN t_app_user_group g ON u.id = g.app_user_id 
	     LEFT JOIN (
	        SELECT t.user_id,GROUP_CONCAT(r.role_name) roleName 
	        FROM t_role_user t JOIN t_user u1 on t.user_id = u1.id
            JOIN t_role r ON t.role_id = r.id GROUP BY t.user_id
	     ) b ON u.id = b.user_id WHERE g.group_id=#{groupId} 
	     
	     <if test="userIdList != null and userIdList.size() != 0">
	       AND u.id in
           <foreach collection="userIdList" item="item" index="index" open="("
	         separator="," close=")">
	         #{item}
           </foreach>
         </if>
         <if test="userName !=null and userName !=''">
             AND u.user_name LIKE CONCAT('%',#{userName},'%')
         </if>
         ORDER BY u.create_time DESC
	</select>
	<select id="selectById" parameterType="java.lang.Integer">
	     select base_union_id from t_user where id = #{userId}
	</select>
	<select id="selectByBaseUnionId" resultType="java.lang.String">
	     SELECT id from t_user where base_union_id=#{baseUnionId}
	</select>
	<select id="seletctUpperUnionId" resultType="java.lang.Integer">
    SELECT orgain_id FROM t_user WHERE base_union_id=#{baseUnionId}
    </select>
    
    <select id="selectUserByDeptId" resultType="java.lang.String">
      select id from t_user where 1=1  
      	     <if test="deptIdList != null and deptIdList.size() != 0">
	       AND dept_id in
           <foreach collection="deptIdList" item="item" index="index" open="("
	         separator="," close=")">
	         #{item}
           </foreach>
         </if>
    </select>
    
    <select id="selectByDeptId" resultType="java.lang.Integer">
       SELECT dept_id FROM t_user WHERE id=#{id}
    </select>
    
    <select id="selectSuperUserId" resultType="java.lang.Integer">
        SELECT id FROM t_user WHERE dept_id=#{deptId}
    </select>
</mapper>