var marryCommentTable;
(function() {
	marryCommentTable = function() {
		'use strict';
		return {
			init : function() {

				var fkGroupId = jQuery('input[name=fkGroupId]').val();
				var submitBtn = jQuery('button[name=submitAuth]');
				var cancelBtn = jQuery('button[name=cancelAuth]');
				var closeBtn = jQuery('button[name=close]');
				var searchBtn = jQuery('button[name=search]');
				var resetBtn = jQuery('button[name=reset]');
				var searchForm = jQuery('form[name=searchForm]');
				searchBtn.on('click', handlerSearchClick);
				resetBtn.on('click', handlerResetClick);
				
				var photoId = jQuery('input[name=photoId]').val();

				// 初始化表格对象
				var oTable = $('#comment-tableList')
						.dataTable(
								{
									"iDisplayLength" : 10,
									"sDom" : "<'row'<'col-lg-6'l><'col-lg-6'f>r>t<'row'<'col-lg-6'i><'col-lg-6'p>>",
									"sPaginationType" : "bootstrap",
									"bLengthChange" : false,
									"bAutoWidth" : false,
									"bPaginite" : true,
									"oLanguage" : {
										"sSearch" : "搜索",
										"sZeroRecords" : "没有检索到数据",
										"sInfoFiltered" : "数据表中共为 _MAX_ 条记录",
										"sInfo" : "显示 _START_ 至 _END_ 条 &nbsp;&nbsp;共 _TOTAL_ 条",
										"sInfoEmtpy" : "没有数据",
										"sProcessing" : "正在加载数据...",
										"oPaginate" : {
											"sFirst" : "首页",
											"sPrevious" : "前一页",
											"sNext" : "后一页",
											"sLast" : "末页"
										}
									},
									"aoColumns" : [
											{
												"mData" : "id",// 获取列数据，跟服务器返回字段一致
												"sClass" : "center",// 显示样式
												"mRender" : function(data,
														type, full) {// 返回自定义的样式
													return "<label><input type='checkbox' name='key' value='"
															+ data
															+ "' class='ace' /><span class='lbl'></span></label>"
												}
											},
											{
												"mData" : "id"
											}, // 此列不绑定数据源，用来显示序号
											{
												"mData" : "comment",
												"mRender" : function(data,
														type, full) {// 返回自定义的样式

													var str = "";
													var len = data.length;
													if (len > 15) {
														str = data.substring(0,
																15)
																+ "......";
													} else {
														str = data;
													}

													return "<span style='width:100px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;' onmousemove='mouseOver(this,\""
															+ data
															+ "\");'>"
															+ str + "</span>"
												}
											}, {
												"mData" : "photoId"
											}, {
												"mData" : "appUserId"
											}, {
												"mData" : "publicTime"
											}, {
												"mData" : "isShieldingName"
											}, {
												"mData" : null
											} ],
									"ordering" : false, // 排序操作在服务端进行，所以可以关了。
									"bFilter" : false, // 去掉搜索框
									"bDestroy" : true,
									"processing" : true,
									"bServerSide" : true,
									"sAjaxDataProp" : "data", // 是服务器分页的标志，必须有
									"sAjaxSource" : "list",
									"aoColumnDefs" : [
											{
												"mRender" : function(data,
														type, full) {
													return '<input type="checkbox" class="checkchild" id="zcheckbox" value="'
															+ full.id + '"/>';
												},
												"aTargets" : [ 0 ]
											},
											{
												"mRender" : function(data,
														type, full) {
													var str = "";
													if (full.isShielding == 0) {
														str += '<a class="btn btn-success btn-xs"  href="javascript:;" name="Shielding" data-id="'
																+ full.id
																+ '"><span class="label">设为屏蔽</span></a>';
													} else {
														str += '<a class="btn btn-warning btn-xs"  href="javascript:;" name="isShielding" data-id="'
																+ full.id
																+ '"><span class="label">取消屏蔽</span></a>';
													}
													return str;
												},
												"aTargets" : [ 7 ]
											} ],
									"fnServerData" : getRoleGrid1Data
								});

				jQuery('table[id=comment-tableList]').width('100%');

				var list = jQuery('table[id=comment-tableList]');

				// 设为屏蔽
				list.on('click', 'a[name=Shielding]', handlerShieldingClick);
				// 取消屏蔽
				list
						.on('click', 'a[name=isShielding]',
								handlerIsShieldingClick);

				function handlerShieldingClick(e) {
					e.preventDefault();
					var pkId = jQuery(this).attr('data-id');
					parent.layer.open({
						content : '确定要设为屏蔽吗?',
						btn : [ '确定', '取消' ],
						yes : function(index, layero) {
							jQuery.post('../comment/updateStatus', {
								"isShielding" : 1,
								'id' : pkId
							}, function(data) {
								if (data.status == 10000) {
									parent.layer.alert(data.data, {
										title : '操作提示',
										icon : 1,
										time : 2000,
										end : function() {
											oTable.fnDraw();
											parent.layer.closeAll();
										}
									});
								} else {
									layer.alert(data.data, {
										title : '操作提示',
										icon : 2
									});
								}
							}, 'json');
						},
						btn2 : function(index, layero) {
							// 按钮【按钮二】的回调
						},
						cancel : function() {
						}
					});
				}

				function handlerIsShieldingClick(e) {
					e.preventDefault();
					var pkId = jQuery(this).attr('data-id');
					parent.layer.open({
						content : '确定要取消屏蔽吗?',
						btn : [ '确定', '取消' ],
						yes : function(index, layero) {
							jQuery.post('../comment/updateStatus', {
								"isShielding" : 0,
								'id' : pkId
							}, function(data) {
								if (data.status == 10000) {
									parent.layer.alert(data.data, {
										title : '操作提示',
										icon : 1,
										time : 2000,
										end : function() {
											oTable.fnDraw();
											parent.layer.closeAll();
										}
									});
								} else {
									layer.alert(data.data, {
										title : '操作提示',
										icon : 2
									});
								}
							}, 'json');
						},
						btn2 : function(index, layero) {
							// 按钮【按钮二】的回调
						},
						cancel : function() {
						}
					});
				}

				// 表格回调函数
				function getRoleGrid1Data(url, aoData, fnCallback) {

					var start = aoData[3].value;
					var rows = aoData[4].value;
					var page = (start / rows) + 1;
					var selectName = jQuery('select[name=selectName]').val();
					var keyName = jQuery('input[name=keyName]').val();
					var isShielding = jQuery('select[name=isShielding]').val();
					var startTime = jQuery('input[name=startTime]').val();
					var endTime = jQuery('input[name=endTime]').val();
					if(photoId!=null && photoId!='' && photoId!=0){
						selectName=2;
						keyName=photoId;
					}
					if (keyName.length > 10) {
						keyName = "";
					}
					$.ajax({
						url : url,
						data : {
							"selectName" : selectName,
							"keyName" : keyName,
							"isShielding" : isShielding,
							"startTime" : startTime,
							"endTime" : endTime,
							"sEcho" : aoData[0].value,
							"rows" : rows,
							"page" : page
						},
						async : false,
						type : 'POST',
						dataType : 'json',
						success : function(result) {
							console.log(result);
							fnCallback(result.data);// 把返回的数据传给这个方法就可以了,datatable会自动绑定数据的

						},
						error : function(XMLHttpRequest, textStatus,
								errorThrown) {
							alert("status:" + XMLHttpRequest.status
									+ ",readyState:"
									+ XMLHttpRequest.readyState
									+ ",textStatus:" + textStatus);
						}
					});
				}

				// 搜索按钮绑定事件
				$('button[name=search]').click(

				function(e) {
					var keyName = $('input[name=keyName]').val();

					if (keyName.length > 10) {
						alert("关键字长度不能超过10个字符");
						return false;
					} else {
						e.preventDefault();
						oTable.fnDraw();
					}
				});

				function handlerSearchClick(e) {
					e.preventDefault();
					oTable.fnDraw();
				}

				function handlerResetClick(e) {
					e.preventDefault();
					searchForm.clearForm();
				}

				/**
				 * 取消事件
				 */
				cancelBtn.on('click', function(e) {
					var value = window.location.search;
					var groupId = value.replace(/[^0-9]/ig, "");
					window.location.href = "houtai.html?groupId=" + groupId;
				})
				closeBtn.on('click', function(e) {
					var value = window.location.search;
					var groupId = value.replace(/[^0-9]/ig, "");
					window.location.href = "houtai.html?groupId=" + groupId;
				})

			}
		};
	}();
})(jQuery);
